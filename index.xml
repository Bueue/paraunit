<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paraunit</title>
    <link>http://facile-it.github.io/paraunit/</link>
    <description>Recent content on Paraunit</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 10 Jun 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://facile-it.github.io/paraunit/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Paraunit 0.6.1</title>
      <link>http://facile-it.github.io/paraunit/news/release/0.6.1/</link>
      <pubDate>Fri, 10 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://facile-it.github.io/paraunit/news/release/0.6.1/</guid>
      <description>

&lt;p&gt;Paraunit 0.6.1 has been released! The main improvement on the user side is the extension of the Symfony package constraint,
to allow the full 3.x series to be used with! The coverage feature is still in the works, I hope to release 0.7 with it
this summer.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the full 0.6.1 changelog:&lt;/p&gt;

&lt;h3 id=&#34;changed:eb248edda385f4fe990f91165e045c4f&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Symfony compatibility has been extended to &lt;code&gt;&amp;lt;4.0&lt;/code&gt;, since Symfony 3.1 has been released; we will rely on &lt;a href=&#34;http://symfony.com/doc/current/contributing/code/bc.html&#34;&gt;their BC promise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A new approach for dockerfiles, now they will be based on the standard Docker PHP library. This will allow for a
faster image build, cleaner dockerfiles and a more precise PHP version targeting, including:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker/dockerfile-php-5.6&lt;/code&gt; with the related &lt;code&gt;docker/setup-php-5.6.sh&lt;/code&gt; script that will allow to build a container
starting from the PHP 5.6 image&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker/dockerfile-php-7&lt;/code&gt; with the related  &lt;code&gt;docker/setup-php-7.sh&lt;/code&gt; script that will allow to build a container
starting from the PHP 7.0 image&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Paraunit now adopts &lt;a href=&#34;http://www.php-fig.org/psr/psr-2/&#34;&gt;PSR-2&lt;/a&gt; as a coding style

&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;contrib/contributing.sh&lt;/code&gt; has been added to tidy the code style, using &lt;code&gt;phpcbf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A git pre-commit hook is enabled during the &lt;code&gt;composer install&lt;/code&gt; command to warn about code style violations&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CONTRIBUTING.md file has been added, with instructions for coding style and usage of Docker images for development&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Paraunit 0.6</title>
      <link>http://facile-it.github.io/paraunit/news/release/0.6/</link>
      <pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://facile-it.github.io/paraunit/news/release/0.6/</guid>
      <description>

&lt;p&gt;Paraunit 0.6 has been released! In the meantime, the coverage feature is being developed on its branch, I hope to have
it working soon and release it in 0.7.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what&amp;rsquo;s changed in 0.6:&lt;/p&gt;

&lt;h3 id=&#34;changed:3e4064403c372484c2470f3a4ca6e139&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MASSIVE refactoring of the result output parsing (#31, #33) and the result printing (#37): now Paraunit fetches the
tests&amp;rsquo; results using PHPUnit&amp;rsquo;s &lt;code&gt;--log-json&lt;/code&gt; option (thanks to @taueres for the idea).
This grants a lot of new features:

&lt;ul&gt;
&lt;li&gt;Parsing of tests results is more robust, it should never fail!&lt;/li&gt;
&lt;li&gt;Fatal errors or segfaults are now grouped as &amp;ldquo;Abnormal termination&amp;rdquo;&lt;/li&gt;
&lt;li&gt;When a test has an abnormal termination, the culpable test function is indicated&lt;/li&gt;
&lt;li&gt;Tests with abnormal termination are printed out in full output&lt;/li&gt;
&lt;li&gt;Tests executed in a test class that has a later abnormal termination are showed and counted in results anyhow&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Added support for warnings, introduced in PHPUnit 5.1 (#30)&lt;/li&gt;
&lt;li&gt;Added support for risky outcomes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fixed:3e4064403c372484c2470f3a4ca6e139&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Removed &lt;code&gt;Container.php&lt;/code&gt; file and &lt;code&gt;CompilerPass&lt;/code&gt; class in favor of proper usage of Symfony&amp;rsquo;s components&lt;/li&gt;
&lt;li&gt;&lt;code&gt;paraunit&lt;/code&gt; bin now uses the container directly&lt;/li&gt;
&lt;li&gt;FinalPrinter class splitted in 3 classes&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Paraunit 0.5</title>
      <link>http://facile-it.github.io/paraunit/news/release/0.5/</link>
      <pubDate>Tue, 08 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://facile-it.github.io/paraunit/news/release/0.5/</guid>
      <description>

&lt;p&gt;Paraunit 0.5 has been released! Here&amp;rsquo;s what&amp;rsquo;s changed:&lt;/p&gt;

&lt;h3 id=&#34;changed:b196f06257d15e11549c5898a055280a&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;SQLite is now supported in the deadlock-recognition fase (issue #26, thanks @Algatux)&lt;/li&gt;
&lt;li&gt;Travis is testing on PHP 7.0, no more nightlies or allowed failures&lt;/li&gt;
&lt;li&gt;Symfony 3.0 components are now supported and compatible with Paraunit&lt;/li&gt;
&lt;li&gt;Retry parsing and management is improved&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fixed:b196f06257d15e11549c5898a055280a&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Removed double generation of MD5 hash of process&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Paraunit 0.4.4</title>
      <link>http://facile-it.github.io/paraunit/news/release/0.4.4/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://facile-it.github.io/paraunit/news/release/0.4.4/</guid>
      <description>

&lt;p&gt;Paraunit 0.4.4 has been released! Here&amp;rsquo;s what&amp;rsquo;s changed:&lt;/p&gt;

&lt;h3 id=&#34;fixed:47b10b648c7c4d34c57c7551fdef1895&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Merged previous &lt;code&gt;v0.4&lt;/code&gt; branch, there were missing fixes in previous release&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Paraunit 0.4.3</title>
      <link>http://facile-it.github.io/paraunit/news/release/0.4.3/</link>
      <pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://facile-it.github.io/paraunit/news/release/0.4.3/</guid>
      <description>

&lt;p&gt;Paraunit 0.4.3 has been released! Here&amp;rsquo;s what&amp;rsquo;s changed:&lt;/p&gt;

&lt;h3 id=&#34;changed:81372b3a4d83f55dd2c2b59e50228f18&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--configuration&lt;/code&gt; behaviour is now identical to the same option in PHPUnit: it can accept also a path without a filename,
and has a &lt;code&gt;-c&lt;/code&gt; shortcut (default filename is &lt;code&gt;phpunit.xml.dist&lt;/code&gt;) (&lt;a href=&#34;[https://github.com/facile-it/paraunit/issues/19]&#34;&gt;#19&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;-c&lt;/code&gt; shortcut to README&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Paraunit 0.4.2</title>
      <link>http://facile-it.github.io/paraunit/news/release/0.4.2/</link>
      <pubDate>Mon, 19 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://facile-it.github.io/paraunit/news/release/0.4.2/</guid>
      <description>

&lt;p&gt;Paraunit 0.4.2 has been released! Here&amp;rsquo;s what&amp;rsquo;s changed:&lt;/p&gt;

&lt;h3 id=&#34;changed:5ed7adfb4ff9f6a05e38fd6e80b1d903&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Unlocked supporto for PHPUnit &amp;gt;= 5.x&lt;/li&gt;
&lt;li&gt;README changed to suggest stable version of package in &lt;code&gt;composer.json&lt;/code&gt; example&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fixed:5ed7adfb4ff9f6a05e38fd6e80b1d903&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fixed: test stub for fatal errors fixed for HHVM &amp;amp; PHP7&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Paraunit 0.4.1</title>
      <link>http://facile-it.github.io/paraunit/news/release/0.4.1/</link>
      <pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://facile-it.github.io/paraunit/news/release/0.4.1/</guid>
      <description>

&lt;p&gt;Paraunit 0.4.1 has been released! Here&amp;rsquo;s what&amp;rsquo;s changed:&lt;/p&gt;

&lt;h3 id=&#34;changed:433cb45309237c24d33aac65d33e55f3&#34;&gt;Changed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Improved: &lt;code&gt;--configuration&lt;/code&gt; parameter now has the &lt;code&gt;-c&lt;/code&gt; shortcut&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fixed:433cb45309237c24d33aac65d33e55f3&#34;&gt;Fixed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fixed: test with fatal errors are not mistaken (and printed twice) for unknown results in the final results&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Documentation</title>
      <link>http://facile-it.github.io/paraunit/documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://facile-it.github.io/paraunit/documentation/</guid>
      <description>

&lt;p&gt;Paraunit is a tool for faster executions of PHPUnit test suites.
It makes this possible by launching multiple test in parallel with single PHPUnit processes.&lt;/p&gt;

&lt;p&gt;Paraunit is developed using &lt;a href=&#34;http://symfony.com/components&#34;&gt;Symfony2 components&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;requirements:519b3731c0b3c26bafa462d3efdcc120&#34;&gt;Requirements&lt;/h1&gt;

&lt;p&gt;Paraunit is used in conjunction with PHPUnit. IT reads PHPUnit&amp;rsquo;s .xml configuration file, so it&amp;rsquo;s needed to know which test to load.&lt;/p&gt;

&lt;p&gt;If you are testing a Symfony2+Doctrine application, it&amp;rsquo;s suggested to use also &lt;a href=&#34;https://github.com/facile-it/paraunit-testcase&#34;&gt;facile-it/paraunit-testcase&lt;/a&gt;, to avoid database concurrency problems during functional testing;
also, if your want to run functional tests, remember to &lt;strong&gt;warm up the cache before&lt;/strong&gt;. in order to avoid a mass cache miss (and relative &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_stampede&#34;&gt;cache stampede&lt;/a&gt;) with concurrency problems, and subsequent random failures.&lt;/p&gt;

&lt;h1 id=&#34;installation:519b3731c0b3c26bafa462d3efdcc120&#34;&gt;Installation&lt;/h1&gt;

&lt;p&gt;To use this package, use &lt;a href=&#34;https://getcomposer.org/&#34;&gt;composer&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;from CLI: &lt;code&gt;composer require facile-it/paraunit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;or, directly in your &lt;code&gt;composer.json&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;require&amp;quot;: {
        &amp;quot;facile-it/paraunit&amp;quot;: &amp;quot;~0.6&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;usage:519b3731c0b3c26bafa462d3efdcc120&#34;&gt;Usage&lt;/h1&gt;

&lt;p&gt;Paraunit starts as a Symfony2 console command, but it&amp;rsquo;s provided through a bin launcher; you can run it like this: (assuming your composer&amp;rsquo;s bin dir is &lt;code&gt;vendor/bin&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vendor/bin/paraunit run&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will launch all the tests in all your configured testsuites.&lt;/p&gt;

&lt;h2 id=&#34;optional-parameters:519b3731c0b3c26bafa462d3efdcc120&#34;&gt;Optional parameters&lt;/h2&gt;

&lt;h3 id=&#34;configuration:519b3731c0b3c26bafa462d3efdcc120&#34;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;If your &lt;code&gt;phpunit.xml.dist&lt;/code&gt; file is not in the default base dir, you can specify it by:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vendor/bin/paraunit run --configuration=relPath/to/phpunit.xml.dist&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or with the short version:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vendor/bin/paraunit run -c=relPath/to/phpunit.xml.dist&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Also it&amp;rsquo;s possible to provide only a directory, in such case Paraunit will look for the &amp;lsquo;phpunit.xml.dist&amp;rsquo;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vendor/bin/paraunit run -c=relPath/to/xml/file/&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;testsuite:519b3731c0b3c26bafa462d3efdcc120&#34;&gt;Testsuite&lt;/h3&gt;

&lt;p&gt;You can run a single test suite (as defined in your configuration file) using:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vendor/bin/paraunit run --testsuite=testSuiteName&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;debug-mode:519b3731c0b3c26bafa462d3efdcc120&#34;&gt;Debug mode&lt;/h3&gt;

&lt;p&gt;If you have problem running the tests, or the execution stops before the results are printed out, you can launch Paraunit in debug mode, with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--debug&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It will show a verbose output with the full running test queue.&lt;/p&gt;

&lt;h1 id=&#34;parsing-results:519b3731c0b3c26bafa462d3efdcc120&#34;&gt;Parsing results&lt;/h1&gt;

&lt;p&gt;Paraunit prints a parsed result from the single PHPUnit processes.
This parsing is done (since version 0.6) using PHPUnit&amp;rsquo;s JSON log output, so it&amp;rsquo;s a resilient and reliable process.
It allows to be also resistent to fatal errors and other abnormal process termination.
If you are experiencing any problems, you can try the &lt;code&gt;--debug&lt;/code&gt; option to identify the problematic test, and try running it alone;
if it&amp;rsquo;s ok and the parser is at fault, please open an issue here on GitHub with the full single test output.&lt;/p&gt;

&lt;p&gt;Anyhow, Paraunit doesn&amp;rsquo;t rely on the parsed results to provide the final exit code; instead, it looks only to the processes&amp;rsquo; exit codes:
 &lt;strong&gt;it will return a clean zero exit code only if all the PHPUnit processes gave it a zero exit code&lt;/strong&gt;.
 So you can safely use it in your CI build ;)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>